/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: RTLSDRDevice.i

package RTLSDRDevice

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef int intgo;
typedef unsigned int uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;



#cgo CXXFLAGS: -std=c++11 -O3
#cgo LDFLAGS: -l:librtlsdr.a -lusb-1.0

typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef long long swig_type_12;
typedef long long swig_type_13;
typedef long long swig_type_14;
typedef long long swig_type_15;
typedef long long swig_type_16;
typedef long long swig_type_17;
typedef long long swig_type_18;
typedef long long swig_type_19;
typedef long long swig_type_20;
typedef _gostring_ swig_type_21;
extern void _wrap_Swig_free_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_RTLSDRDevice_f53f824e15348b86(swig_intgo arg1);
extern swig_intgo _wrap_logERROR_RTLSDRDevice_f53f824e15348b86(void);
extern swig_intgo _wrap_logWARN_RTLSDRDevice_f53f824e15348b86(void);
extern swig_intgo _wrap_logINFO_RTLSDRDevice_f53f824e15348b86(void);
extern swig_intgo _wrap_logDEBUG_RTLSDRDevice_f53f824e15348b86(void);
extern uintptr_t _wrap__swig_NewDirectorRTLSDRDeviceCallbackRTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86(int);
extern void _wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbFloatIQ_RTLSDRDevice_f53f824e15348b86(uintptr_t, uintptr_t data, swig_intgo length);
extern void _wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbS16IQ_RTLSDRDevice_f53f824e15348b86(uintptr_t, uintptr_t data, swig_intgo length);
extern void _wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbS8IQ_RTLSDRDevice_f53f824e15348b86(uintptr_t, uintptr_t data, swig_intgo length);
extern void _wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Info_RTLSDRDevice_f53f824e15348b86(uintptr_t, swig_type_1 arg0);
extern void _wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Error_RTLSDRDevice_f53f824e15348b86(uintptr_t, swig_type_2 arg0);
extern void _wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Warn_RTLSDRDevice_f53f824e15348b86(uintptr_t, swig_type_3 arg0);
extern void _wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Debug_RTLSDRDevice_f53f824e15348b86(uintptr_t, swig_type_4 arg0);
extern void _wrap_DeleteDirectorRTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_RTLSDRDeviceCallback_cbFloatIQ_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_RTLSDRDeviceCallback_cbS16IQ_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_RTLSDRDeviceCallback_cbS8IQ_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_RTLSDRDeviceCallback_Info_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_type_1 arg2);
extern void _wrap_RTLSDRDeviceCallback_Error_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_type_2 arg2);
extern void _wrap_RTLSDRDeviceCallback_Warn_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_type_3 arg2);
extern void _wrap_RTLSDRDeviceCallback_Debug_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_type_4 arg2);
extern void _wrap_delete_RTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern uintptr_t _wrap_new_RTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86(void);
extern uintptr_t _wrap_new_Log_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern uintptr_t _wrap_Log_Get__SWIG_0_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Log_Get__SWIG_1_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_delete_Log_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern uintptr_t _wrap_new_Vector32u__SWIG_0_RTLSDRDevice_f53f824e15348b86(void);
extern uintptr_t _wrap_new_Vector32u__SWIG_1_RTLSDRDevice_f53f824e15348b86(swig_type_5 arg1);
extern uintptr_t _wrap_new_Vector32u__SWIG_2_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_6 _wrap_Vector32u_size_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_7 _wrap_Vector32u_capacity_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector32u_reserve_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_type_8 arg2);
extern _Bool _wrap_Vector32u_isEmpty_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector32u_clear_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector32u_add_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Vector32u_get_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Vector32u_set_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_delete_Vector32u_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern uintptr_t _wrap_new_Vector32f__SWIG_0_RTLSDRDevice_f53f824e15348b86(void);
extern uintptr_t _wrap_new_Vector32f__SWIG_1_RTLSDRDevice_f53f824e15348b86(swig_type_9 arg1);
extern uintptr_t _wrap_new_Vector32f__SWIG_2_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_10 _wrap_Vector32f_size_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_11 _wrap_Vector32f_capacity_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector32f_reserve_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_type_12 arg2);
extern _Bool _wrap_Vector32f_isEmpty_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector32f_clear_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector32f_add_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, float arg2);
extern float _wrap_Vector32f_get_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Vector32f_set_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2, float arg3);
extern void _wrap_delete_Vector32f_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern uintptr_t _wrap_new_Vector16i__SWIG_0_RTLSDRDevice_f53f824e15348b86(void);
extern uintptr_t _wrap_new_Vector16i__SWIG_1_RTLSDRDevice_f53f824e15348b86(swig_type_13 arg1);
extern uintptr_t _wrap_new_Vector16i__SWIG_2_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_14 _wrap_Vector16i_size_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_15 _wrap_Vector16i_capacity_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector16i_reserve_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_type_16 arg2);
extern _Bool _wrap_Vector16i_isEmpty_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector16i_clear_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector16i_add_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, short arg2);
extern short _wrap_Vector16i_get_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Vector16i_set_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2, short arg3);
extern void _wrap_delete_Vector16i_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern uintptr_t _wrap_new_Vector8i__SWIG_0_RTLSDRDevice_f53f824e15348b86(void);
extern uintptr_t _wrap_new_Vector8i__SWIG_1_RTLSDRDevice_f53f824e15348b86(swig_type_17 arg1);
extern uintptr_t _wrap_new_Vector8i__SWIG_2_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_18 _wrap_Vector8i_size_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_19 _wrap_Vector8i_capacity_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector8i_reserve_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_type_20 arg2);
extern _Bool _wrap_Vector8i_isEmpty_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector8i_clear_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_Vector8i_add_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, char arg2);
extern char _wrap_Vector8i_get_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Vector8i_set_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2, char arg3);
extern void _wrap_delete_Vector8i_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern uintptr_t _wrap_new_RtlFrontend_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_delete_RtlFrontend_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_intgo _wrap_RtlFrontend_SetSampleRate_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RtlFrontend_SetCenterFrequency_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_RtlFrontend_GetAvailableSampleRates_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_RtlFrontend_Start_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_RtlFrontend_Stop_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_RtlFrontend_SetAGC_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, _Bool arg2);
extern void _wrap_RtlFrontend_SetLNAGain_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RtlFrontend_SetVGAGain_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RtlFrontend_SetMixerGain_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RtlFrontend_SetBiasT_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, char arg2);
extern void _wrap_RtlFrontend_SetOffsetTunning_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, char arg2);
extern char _wrap_RtlFrontend_GetTuner_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_intgo _wrap_RtlFrontend_GetCenterFrequency_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_type_21 _wrap_RtlFrontend_GetName_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern swig_intgo _wrap_RtlFrontend_GetSampleRate_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
extern void _wrap_RtlFrontend_SetSamplesAvailableCallback_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_RtlFrontend_Init_RTLSDRDevice_f53f824e15348b86(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_RTLSDRDevice_f53f824e15348b86(C.swig_intgo(_swig_i_0)))
	return swig_r
}

const FRONTEND_SAMPLETYPE_FLOATIQ int = 0
const FRONTEND_SAMPLETYPE_S16IQ int = 1
const FRONTEND_SAMPLETYPE_S8IQ int = 2

type TLogLevel int

func _swig_getlogERROR() (_swig_ret TLogLevel) {
	var swig_r TLogLevel
	swig_r = (TLogLevel)(C._wrap_logERROR_RTLSDRDevice_f53f824e15348b86())
	return swig_r
}

var LogERROR TLogLevel = _swig_getlogERROR()

func _swig_getlogWARN() (_swig_ret TLogLevel) {
	var swig_r TLogLevel
	swig_r = (TLogLevel)(C._wrap_logWARN_RTLSDRDevice_f53f824e15348b86())
	return swig_r
}

var LogWARN TLogLevel = _swig_getlogWARN()

func _swig_getlogINFO() (_swig_ret TLogLevel) {
	var swig_r TLogLevel
	swig_r = (TLogLevel)(C._wrap_logINFO_RTLSDRDevice_f53f824e15348b86())
	return swig_r
}

var LogINFO TLogLevel = _swig_getlogINFO()

func _swig_getlogDEBUG() (_swig_ret TLogLevel) {
	var swig_r TLogLevel
	swig_r = (TLogLevel)(C._wrap_logDEBUG_RTLSDRDevice_f53f824e15348b86())
	return swig_r
}

var LogDEBUG TLogLevel = _swig_getlogDEBUG()

type _swig_DirectorRTLSDRDeviceCallback struct {
	SwigcptrRTLSDRDeviceCallback
	v interface{}
}

func (p *_swig_DirectorRTLSDRDeviceCallback) Swigcptr() uintptr {
	return p.SwigcptrRTLSDRDeviceCallback.Swigcptr()
}

func (p *_swig_DirectorRTLSDRDeviceCallback) SwigIsRTLSDRDeviceCallback() {
}

func (p *_swig_DirectorRTLSDRDeviceCallback) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorRTLSDRDeviceCallback(v interface{}) RTLSDRDeviceCallback {
	p := &_swig_DirectorRTLSDRDeviceCallback{0, v}
	p.SwigcptrRTLSDRDeviceCallback = SwigcptrRTLSDRDeviceCallback(C._wrap__swig_NewDirectorRTLSDRDeviceCallbackRTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86(C.int(swigDirectorAdd(p))))
	return p
}

type _swig_DirectorInterfaceRTLSDRDeviceCallbackCbFloatIQ interface {
	CbFloatIQ(uintptr, int)
}

func (swig_p *_swig_DirectorRTLSDRDeviceCallback) CbFloatIQ(data uintptr, length int) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRTLSDRDeviceCallbackCbFloatIQ); swig_ok {
		swig_g.CbFloatIQ(data, length)
		return
	}
	_swig_i_0 := data
	_swig_i_1 := length
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbFloatIQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(swig_p.SwigcptrRTLSDRDeviceCallback), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func DirectorRTLSDRDeviceCallbackCbFloatIQ(p RTLSDRDeviceCallback, arg2 uintptr, arg3 int) {
	_swig_i_0 := arg2
	_swig_i_1 := arg3
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbFloatIQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(p.(*_swig_DirectorRTLSDRDeviceCallback).SwigcptrRTLSDRDeviceCallback), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

//export Swig_DirectorRTLSDRDeviceCallback_callback_cbFloatIQ_RTLSDRDevice_f53f824e15348b86
func Swig_DirectorRTLSDRDeviceCallback_callback_cbFloatIQ_RTLSDRDevice_f53f824e15348b86(swig_c int, arg2 uintptr, arg3 int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRTLSDRDeviceCallback)
	swig_p.CbFloatIQ(arg2, arg3)
}

type _swig_DirectorInterfaceRTLSDRDeviceCallbackCbS16IQ interface {
	CbS16IQ(uintptr, int)
}

func (swig_p *_swig_DirectorRTLSDRDeviceCallback) CbS16IQ(data uintptr, length int) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRTLSDRDeviceCallbackCbS16IQ); swig_ok {
		swig_g.CbS16IQ(data, length)
		return
	}
	_swig_i_0 := data
	_swig_i_1 := length
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbS16IQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(swig_p.SwigcptrRTLSDRDeviceCallback), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func DirectorRTLSDRDeviceCallbackCbS16IQ(p RTLSDRDeviceCallback, arg2 uintptr, arg3 int) {
	_swig_i_0 := arg2
	_swig_i_1 := arg3
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbS16IQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(p.(*_swig_DirectorRTLSDRDeviceCallback).SwigcptrRTLSDRDeviceCallback), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

//export Swig_DirectorRTLSDRDeviceCallback_callback_cbS16IQ_RTLSDRDevice_f53f824e15348b86
func Swig_DirectorRTLSDRDeviceCallback_callback_cbS16IQ_RTLSDRDevice_f53f824e15348b86(swig_c int, arg2 uintptr, arg3 int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRTLSDRDeviceCallback)
	swig_p.CbS16IQ(arg2, arg3)
}

type _swig_DirectorInterfaceRTLSDRDeviceCallbackCbS8IQ interface {
	CbS8IQ(uintptr, int)
}

func (swig_p *_swig_DirectorRTLSDRDeviceCallback) CbS8IQ(data uintptr, length int) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRTLSDRDeviceCallbackCbS8IQ); swig_ok {
		swig_g.CbS8IQ(data, length)
		return
	}
	_swig_i_0 := data
	_swig_i_1 := length
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbS8IQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(swig_p.SwigcptrRTLSDRDeviceCallback), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func DirectorRTLSDRDeviceCallbackCbS8IQ(p RTLSDRDeviceCallback, arg2 uintptr, arg3 int) {
	_swig_i_0 := arg2
	_swig_i_1 := arg3
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_CbS8IQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(p.(*_swig_DirectorRTLSDRDeviceCallback).SwigcptrRTLSDRDeviceCallback), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

//export Swig_DirectorRTLSDRDeviceCallback_callback_cbS8IQ_RTLSDRDevice_f53f824e15348b86
func Swig_DirectorRTLSDRDeviceCallback_callback_cbS8IQ_RTLSDRDevice_f53f824e15348b86(swig_c int, arg2 uintptr, arg3 int) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRTLSDRDeviceCallback)
	swig_p.CbS8IQ(arg2, arg3)
}

type _swig_DirectorInterfaceRTLSDRDeviceCallbackInfo interface {
	Info(string)
}

func (swig_p *_swig_DirectorRTLSDRDeviceCallback) Info(arg0 string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRTLSDRDeviceCallbackInfo); swig_ok {
		swig_g.Info(arg0)
		return
	}
	_swig_i_0 := arg0
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Info_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(swig_p.SwigcptrRTLSDRDeviceCallback), *(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

func DirectorRTLSDRDeviceCallbackInfo(p RTLSDRDeviceCallback, arg2 string) {
	_swig_i_0 := arg2
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Info_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(p.(*_swig_DirectorRTLSDRDeviceCallback).SwigcptrRTLSDRDeviceCallback), *(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

//export Swig_DirectorRTLSDRDeviceCallback_callback_Info_RTLSDRDevice_f53f824e15348b86
func Swig_DirectorRTLSDRDeviceCallback_callback_Info_RTLSDRDevice_f53f824e15348b86(swig_c int, arg2 string) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRTLSDRDeviceCallback)
	_swig_i_0 = swigCopyString(arg2)
	swig_p.Info(_swig_i_0)
}

type _swig_DirectorInterfaceRTLSDRDeviceCallbackError interface {
	Error(string)
}

func (swig_p *_swig_DirectorRTLSDRDeviceCallback) Error(arg0 string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRTLSDRDeviceCallbackError); swig_ok {
		swig_g.Error(arg0)
		return
	}
	_swig_i_0 := arg0
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Error_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(swig_p.SwigcptrRTLSDRDeviceCallback), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

func DirectorRTLSDRDeviceCallbackError(p RTLSDRDeviceCallback, arg2 string) {
	_swig_i_0 := arg2
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Error_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(p.(*_swig_DirectorRTLSDRDeviceCallback).SwigcptrRTLSDRDeviceCallback), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

//export Swig_DirectorRTLSDRDeviceCallback_callback_Error_RTLSDRDevice_f53f824e15348b86
func Swig_DirectorRTLSDRDeviceCallback_callback_Error_RTLSDRDevice_f53f824e15348b86(swig_c int, arg2 string) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRTLSDRDeviceCallback)
	_swig_i_0 = swigCopyString(arg2)
	swig_p.Error(_swig_i_0)
}

type _swig_DirectorInterfaceRTLSDRDeviceCallbackWarn interface {
	Warn(string)
}

func (swig_p *_swig_DirectorRTLSDRDeviceCallback) Warn(arg0 string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRTLSDRDeviceCallbackWarn); swig_ok {
		swig_g.Warn(arg0)
		return
	}
	_swig_i_0 := arg0
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Warn_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(swig_p.SwigcptrRTLSDRDeviceCallback), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

func DirectorRTLSDRDeviceCallbackWarn(p RTLSDRDeviceCallback, arg2 string) {
	_swig_i_0 := arg2
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Warn_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(p.(*_swig_DirectorRTLSDRDeviceCallback).SwigcptrRTLSDRDeviceCallback), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

//export Swig_DirectorRTLSDRDeviceCallback_callback_Warn_RTLSDRDevice_f53f824e15348b86
func Swig_DirectorRTLSDRDeviceCallback_callback_Warn_RTLSDRDevice_f53f824e15348b86(swig_c int, arg2 string) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRTLSDRDeviceCallback)
	_swig_i_0 = swigCopyString(arg2)
	swig_p.Warn(_swig_i_0)
}

type _swig_DirectorInterfaceRTLSDRDeviceCallbackDebug interface {
	Debug(string)
}

func (swig_p *_swig_DirectorRTLSDRDeviceCallback) Debug(arg0 string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceRTLSDRDeviceCallbackDebug); swig_ok {
		swig_g.Debug(arg0)
		return
	}
	_swig_i_0 := arg0
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Debug_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(swig_p.SwigcptrRTLSDRDeviceCallback), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

func DirectorRTLSDRDeviceCallbackDebug(p RTLSDRDeviceCallback, arg2 string) {
	_swig_i_0 := arg2
	C._wrap__swig_DirectorRTLSDRDeviceCallback_upcall_Debug_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(p.(*_swig_DirectorRTLSDRDeviceCallback).SwigcptrRTLSDRDeviceCallback), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

//export Swig_DirectorRTLSDRDeviceCallback_callback_Debug_RTLSDRDevice_f53f824e15348b86
func Swig_DirectorRTLSDRDeviceCallback_callback_Debug_RTLSDRDevice_f53f824e15348b86(swig_c int, arg2 string) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorRTLSDRDeviceCallback)
	_swig_i_0 = swigCopyString(arg2)
	swig_p.Debug(_swig_i_0)
}

func DeleteDirectorRTLSDRDeviceCallback(arg1 RTLSDRDeviceCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DeleteDirectorRTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_RTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86
func Swiggo_DeleteDirector_RTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86(c int) {
	swigDirectorLookup(c).(*_swig_DirectorRTLSDRDeviceCallback).SwigcptrRTLSDRDeviceCallback = 0
	swigDirectorDelete(c)
}

type SwigcptrRTLSDRDeviceCallback uintptr

func (p SwigcptrRTLSDRDeviceCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRTLSDRDeviceCallback) SwigIsRTLSDRDeviceCallback() {
}

func (p SwigcptrRTLSDRDeviceCallback) DirectorInterface() interface{} {
	return nil
}

func (arg1 SwigcptrRTLSDRDeviceCallback) CbFloatIQ(arg2 uintptr, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RTLSDRDeviceCallback_cbFloatIQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRTLSDRDeviceCallback) CbS16IQ(arg2 uintptr, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RTLSDRDeviceCallback_cbS16IQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRTLSDRDeviceCallback) CbS8IQ(arg2 uintptr, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RTLSDRDeviceCallback_cbS8IQ_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrRTLSDRDeviceCallback) Info(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RTLSDRDeviceCallback_Info_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), *(*C.swig_type_1)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRTLSDRDeviceCallback) Error(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RTLSDRDeviceCallback_Error_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRTLSDRDeviceCallback) Warn(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RTLSDRDeviceCallback_Warn_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRTLSDRDeviceCallback) Debug(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RTLSDRDeviceCallback_Debug_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func DeleteRTLSDRDeviceCallback(arg1 RTLSDRDeviceCallback) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func NewRTLSDRDeviceCallback() (_swig_ret RTLSDRDeviceCallback) {
	var swig_r RTLSDRDeviceCallback
	swig_r = (RTLSDRDeviceCallback)(SwigcptrRTLSDRDeviceCallback(C._wrap_new_RTLSDRDeviceCallback_RTLSDRDevice_f53f824e15348b86()))
	return swig_r
}

type RTLSDRDeviceCallback interface {
	Swigcptr() uintptr
	SwigIsRTLSDRDeviceCallback()
	DirectorInterface() interface{}
	CbFloatIQ(arg2 uintptr, arg3 int)
	CbS16IQ(arg2 uintptr, arg3 int)
	CbS8IQ(arg2 uintptr, arg3 int)
	Info(arg2 string)
	Error(arg2 string)
	Warn(arg2 string)
	Debug(arg2 string)
}

type SwigcptrLog uintptr

func (p SwigcptrLog) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLog) SwigIsLog() {
}

func NewLog(arg1 RTLSDRDeviceCallback) (_swig_ret Log) {
	var swig_r Log
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Log)(SwigcptrLog(C._wrap_new_Log_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLog) Get__SWIG_0(arg2 TLogLevel) (_swig_ret Std_ostringstream) {
	var swig_r Std_ostringstream
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_ostringstream)(SwigcptrStd_ostringstream(C._wrap_Log_Get__SWIG_0_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrLog) Get__SWIG_1() (_swig_ret Std_ostringstream) {
	var swig_r Std_ostringstream
	_swig_i_0 := arg1
	swig_r = (Std_ostringstream)(SwigcptrStd_ostringstream(C._wrap_Log_Get__SWIG_1_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrLog) Get(a ...interface{}) Std_ostringstream {
	argc := len(a)
	if argc == 0 {
		return p.Get__SWIG_1()
	}
	if argc == 1 {
		return p.Get__SWIG_0(a[0].(TLogLevel))
	}
	panic("No match for overloaded function call")
}

func DeleteLog(arg1 Log) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Log_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

type Log interface {
	Swigcptr() uintptr
	SwigIsLog()
	Get(a ...interface{}) Std_ostringstream
}

type SwigcptrVector32u uintptr

func (p SwigcptrVector32u) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVector32u) SwigIsVector32u() {
}

func NewVector32u__SWIG_0() (_swig_ret Vector32u) {
	var swig_r Vector32u
	swig_r = (Vector32u)(SwigcptrVector32u(C._wrap_new_Vector32u__SWIG_0_RTLSDRDevice_f53f824e15348b86()))
	return swig_r
}

func NewVector32u__SWIG_1(arg1 int64) (_swig_ret Vector32u) {
	var swig_r Vector32u
	_swig_i_0 := arg1
	swig_r = (Vector32u)(SwigcptrVector32u(C._wrap_new_Vector32u__SWIG_1_RTLSDRDevice_f53f824e15348b86(C.swig_type_5(_swig_i_0))))
	return swig_r
}

func NewVector32u__SWIG_2(arg1 Vector32u) (_swig_ret Vector32u) {
	var swig_r Vector32u
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Vector32u)(SwigcptrVector32u(C._wrap_new_Vector32u__SWIG_2_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVector32u(a ...interface{}) Vector32u {
	argc := len(a)
	if argc == 0 {
		return NewVector32u__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewVector32u__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewVector32u__SWIG_2(a[0].(Vector32u))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVector32u) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Vector32u_size_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector32u) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Vector32u_capacity_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector32u) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vector32u_reserve_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_type_8(_swig_i_1))
}

func (arg1 SwigcptrVector32u) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Vector32u_isEmpty_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector32u) Clear() {
	_swig_i_0 := arg1
	C._wrap_Vector32u_clear_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVector32u) Add(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vector32u_add_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrVector32u) Get(arg2 int) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_Vector32u_get_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVector32u) Set(arg2 int, arg3 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Vector32u_set_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func DeleteVector32u(arg1 Vector32u) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vector32u_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

type Vector32u interface {
	Swigcptr() uintptr
	SwigIsVector32u()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 uint)
	Get(arg2 int) (_swig_ret uint)
	Set(arg2 int, arg3 uint)
}

type SwigcptrVector32f uintptr

func (p SwigcptrVector32f) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVector32f) SwigIsVector32f() {
}

func NewVector32f__SWIG_0() (_swig_ret Vector32f) {
	var swig_r Vector32f
	swig_r = (Vector32f)(SwigcptrVector32f(C._wrap_new_Vector32f__SWIG_0_RTLSDRDevice_f53f824e15348b86()))
	return swig_r
}

func NewVector32f__SWIG_1(arg1 int64) (_swig_ret Vector32f) {
	var swig_r Vector32f
	_swig_i_0 := arg1
	swig_r = (Vector32f)(SwigcptrVector32f(C._wrap_new_Vector32f__SWIG_1_RTLSDRDevice_f53f824e15348b86(C.swig_type_9(_swig_i_0))))
	return swig_r
}

func NewVector32f__SWIG_2(arg1 Vector32f) (_swig_ret Vector32f) {
	var swig_r Vector32f
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Vector32f)(SwigcptrVector32f(C._wrap_new_Vector32f__SWIG_2_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVector32f(a ...interface{}) Vector32f {
	argc := len(a)
	if argc == 0 {
		return NewVector32f__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewVector32f__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewVector32f__SWIG_2(a[0].(Vector32f))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVector32f) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Vector32f_size_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector32f) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Vector32f_capacity_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector32f) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vector32f_reserve_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_type_12(_swig_i_1))
}

func (arg1 SwigcptrVector32f) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Vector32f_isEmpty_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector32f) Clear() {
	_swig_i_0 := arg1
	C._wrap_Vector32f_clear_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVector32f) Add(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vector32f_add_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrVector32f) Get(arg2 int) (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float32)(C._wrap_Vector32f_get_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVector32f) Set(arg2 int, arg3 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Vector32f_set_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.float(_swig_i_2))
}

func DeleteVector32f(arg1 Vector32f) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vector32f_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

type Vector32f interface {
	Swigcptr() uintptr
	SwigIsVector32f()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 float32)
	Get(arg2 int) (_swig_ret float32)
	Set(arg2 int, arg3 float32)
}

type SwigcptrVector16i uintptr

func (p SwigcptrVector16i) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVector16i) SwigIsVector16i() {
}

func NewVector16i__SWIG_0() (_swig_ret Vector16i) {
	var swig_r Vector16i
	swig_r = (Vector16i)(SwigcptrVector16i(C._wrap_new_Vector16i__SWIG_0_RTLSDRDevice_f53f824e15348b86()))
	return swig_r
}

func NewVector16i__SWIG_1(arg1 int64) (_swig_ret Vector16i) {
	var swig_r Vector16i
	_swig_i_0 := arg1
	swig_r = (Vector16i)(SwigcptrVector16i(C._wrap_new_Vector16i__SWIG_1_RTLSDRDevice_f53f824e15348b86(C.swig_type_13(_swig_i_0))))
	return swig_r
}

func NewVector16i__SWIG_2(arg1 Vector16i) (_swig_ret Vector16i) {
	var swig_r Vector16i
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Vector16i)(SwigcptrVector16i(C._wrap_new_Vector16i__SWIG_2_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVector16i(a ...interface{}) Vector16i {
	argc := len(a)
	if argc == 0 {
		return NewVector16i__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewVector16i__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewVector16i__SWIG_2(a[0].(Vector16i))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVector16i) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Vector16i_size_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector16i) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Vector16i_capacity_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector16i) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vector16i_reserve_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_type_16(_swig_i_1))
}

func (arg1 SwigcptrVector16i) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Vector16i_isEmpty_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector16i) Clear() {
	_swig_i_0 := arg1
	C._wrap_Vector16i_clear_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVector16i) Add(arg2 int16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vector16i_add_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrVector16i) Get(arg2 int) (_swig_ret int16) {
	var swig_r int16
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int16)(C._wrap_Vector16i_get_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVector16i) Set(arg2 int, arg3 int16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Vector16i_set_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.short(_swig_i_2))
}

func DeleteVector16i(arg1 Vector16i) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vector16i_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

type Vector16i interface {
	Swigcptr() uintptr
	SwigIsVector16i()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 int16)
	Get(arg2 int) (_swig_ret int16)
	Set(arg2 int, arg3 int16)
}

type SwigcptrVector8i uintptr

func (p SwigcptrVector8i) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVector8i) SwigIsVector8i() {
}

func NewVector8i__SWIG_0() (_swig_ret Vector8i) {
	var swig_r Vector8i
	swig_r = (Vector8i)(SwigcptrVector8i(C._wrap_new_Vector8i__SWIG_0_RTLSDRDevice_f53f824e15348b86()))
	return swig_r
}

func NewVector8i__SWIG_1(arg1 int64) (_swig_ret Vector8i) {
	var swig_r Vector8i
	_swig_i_0 := arg1
	swig_r = (Vector8i)(SwigcptrVector8i(C._wrap_new_Vector8i__SWIG_1_RTLSDRDevice_f53f824e15348b86(C.swig_type_17(_swig_i_0))))
	return swig_r
}

func NewVector8i__SWIG_2(arg1 Vector8i) (_swig_ret Vector8i) {
	var swig_r Vector8i
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Vector8i)(SwigcptrVector8i(C._wrap_new_Vector8i__SWIG_2_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVector8i(a ...interface{}) Vector8i {
	argc := len(a)
	if argc == 0 {
		return NewVector8i__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewVector8i__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewVector8i__SWIG_2(a[0].(Vector8i))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVector8i) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Vector8i_size_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector8i) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Vector8i_capacity_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector8i) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vector8i_reserve_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_type_20(_swig_i_1))
}

func (arg1 SwigcptrVector8i) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Vector8i_isEmpty_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVector8i) Clear() {
	_swig_i_0 := arg1
	C._wrap_Vector8i_clear_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVector8i) Add(arg2 int8) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vector8i_add_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrVector8i) Get(arg2 int) (_swig_ret int8) {
	var swig_r int8
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int8)(C._wrap_Vector8i_get_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVector8i) Set(arg2 int, arg3 int8) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Vector8i_set_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.char(_swig_i_2))
}

func DeleteVector8i(arg1 Vector8i) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vector8i_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

type Vector8i interface {
	Swigcptr() uintptr
	SwigIsVector8i()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 int8)
	Get(arg2 int) (_swig_ret int8)
	Set(arg2 int, arg3 int8)
}

type SwigcptrRtlFrontend uintptr

func (p SwigcptrRtlFrontend) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRtlFrontend) SwigIsRtlFrontend() {
}

func NewRtlFrontend(arg1 RTLSDRDeviceCallback) (_swig_ret RtlFrontend) {
	var swig_r RtlFrontend
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (RtlFrontend)(SwigcptrRtlFrontend(C._wrap_new_RtlFrontend_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteRtlFrontend(arg1 RtlFrontend) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RtlFrontend_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRtlFrontend) SetSampleRate(arg2 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RtlFrontend_SetSampleRate_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRtlFrontend) SetCenterFrequency(arg2 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_RtlFrontend_SetCenterFrequency_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRtlFrontend) GetAvailableSampleRates() (_swig_ret Vector32u) {
	var swig_r Vector32u
	_swig_i_0 := arg1
	swig_r = (Vector32u)(SwigcptrVector32u(C._wrap_RtlFrontend_GetAvailableSampleRates_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRtlFrontend) Start() {
	_swig_i_0 := arg1
	C._wrap_RtlFrontend_Start_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRtlFrontend) Stop() {
	_swig_i_0 := arg1
	C._wrap_RtlFrontend_Stop_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRtlFrontend) SetAGC(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RtlFrontend_SetAGC_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrRtlFrontend) SetLNAGain(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RtlFrontend_SetLNAGain_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRtlFrontend) SetVGAGain(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RtlFrontend_SetVGAGain_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRtlFrontend) SetMixerGain(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RtlFrontend_SetMixerGain_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRtlFrontend) SetBiasT(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RtlFrontend_SetBiasT_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRtlFrontend) SetOffsetTunning(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RtlFrontend_SetOffsetTunning_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrRtlFrontend) GetTuner() (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	swig_r = (byte)(C._wrap_RtlFrontend_GetTuner_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRtlFrontend) GetCenterFrequency() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RtlFrontend_GetCenterFrequency_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRtlFrontend) GetName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RtlFrontend_GetName_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrRtlFrontend) GetSampleRate() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_RtlFrontend_GetSampleRate_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRtlFrontend) SetSamplesAvailableCallback(arg2 RTLSDRDeviceCallback) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_RtlFrontend_SetSamplesAvailableCallback_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRtlFrontend) Init() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RtlFrontend_Init_RTLSDRDevice_f53f824e15348b86(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type RtlFrontend interface {
	Swigcptr() uintptr
	SwigIsRtlFrontend()
	SetSampleRate(arg2 uint) (_swig_ret uint)
	SetCenterFrequency(arg2 uint) (_swig_ret uint)
	GetAvailableSampleRates() (_swig_ret Vector32u)
	Start()
	Stop()
	SetAGC(arg2 bool)
	SetLNAGain(arg2 int)
	SetVGAGain(arg2 int)
	SetMixerGain(arg2 int)
	SetBiasT(arg2 byte)
	SetOffsetTunning(arg2 byte)
	GetTuner() (_swig_ret byte)
	GetCenterFrequency() (_swig_ret uint)
	GetName() (_swig_ret string)
	GetSampleRate() (_swig_ret uint)
	SetSamplesAvailableCallback(arg2 RTLSDRDeviceCallback)
	Init() (_swig_ret bool)
}

type SwigcptrSwigDirector_RTLSDRDeviceCallback uintptr
type SwigDirector_RTLSDRDeviceCallback interface {
	Swigcptr() uintptr
}

func (p SwigcptrSwigDirector_RTLSDRDeviceCallback) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_ostringstream uintptr
type Std_ostringstream interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_ostringstream) Swigcptr() uintptr {
	return uintptr(p)
}

var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}
